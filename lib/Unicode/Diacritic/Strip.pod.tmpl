[% start_year=2012 %]
[%- MACRO example(file) BLOCK %]
[%- pl = file _ ".pl" -%]
[%- out = file _ "-out.txt" -%]
[% INCLUDE $pl | xtidy %]

produces output

[% INCLUDE $out | xtidy %]

(This example is included as L<F<[% pl %]>|https://api.metacpan.org/source/BKB/[% info.name %]-[% info.version %]/examples/[% pl %]> in the distribution.)
[% END %]
=encoding UTF-8

=head1 NAME

Unicode::Diacritic::Strip - strip diacritics from Unicode text

=head1 SYNOPSIS

[% example("synopsis") %]

=head1 VERSION

This documents [% info.colon %] version [% info.version %]
corresponding to git commit L<[% commit.commit %]|[% info.repo
%]/commit/[% commit.commit %]> released on [% commit.date %].

=head1 DESCRIPTION

This module offers two ways to remove diacritics from Unicode
text. One of them, L</strip_diacritics>, uses the unicode
decompositions to break the characters down. The other one,
L</fast_strip>, uses tr with a big list of alphabetical characters
with and without diacritics. There is also L</strip_alphabet>, which
is the same as L</strip_diacritics>, but it also returns a list of what
characters were changed.

=head1 FUNCTIONS

=head2 strip_diacritics

    my $stripped = strip_diacritics ($text);

Strip diacritics from C<$text>. The diacritics are as defined by the
Unicode Character Database. See L<Unicode::UCD>.

=head2 strip_alphabet

    my ($stripped, $swaps) = strip_alphabet ($text);

Strip diacritics from C<$text> in the same way as
L</strip_diacritics>, and also return the alphabet of diacritic to
non-diacritic characters as a hash reference.

[% example("strip-alphabet") %]

This was added to the module in version 0.08. Prior to that it was in
another module called Unicode::StripDiacritics which I wrote as a
duplicate of this module, but fortunately hadn't released to CPAN.

=head2 fast_strip

    my $stripped = fast_strip ($text);

Rapidly strip alphabetical Unicode characters to the nearest plain
ASCII equivalents. This is just a big list of characters and a C<tr>
to zap them into ASCII.

[% example("ask") %]

This was added to the module in version 0.07. It has been in service
for several years at the following website:
L<http://www.sljfaq.org/cgi/e2k.cgi> for converting the user's inputs
into the closest English equivalent.

=head1 SEE ALSO

=head2 CPAN modules

=over

=item L<Text::Undiacritic>

This overlaps with Unicode::Diacritic::Strip.

=item L<Text::Unidecode>

This somewhat bizarre module converts any Unicode to ASCII.

=item L<Text::Unaccent>

This is an XS module dating from more than ten years ago which has
problems compiling on 64 bit systems.

=item L<Text::Unaccent::PurePerl>

=item L<Text::Transliterator::Unaccent>

=item L<Text::StripAccents>

=back

=head1 DEPENDENCIES

=over

=item L<Unicode::UCD>

=item L<Encode>

=back

=head1 EXPORTS

Nothing is exported by default. The functions L</strip_diacritics>,
L</strip_alphabet>, and L</fast_strip> are exported on demand. A tag
C<:all> exports all the functions from the module.

=head1 BUGS

=over

=item Test failures on Perl 5.14

The test failures on CPAN testers for version 0.08 of this module and
Perl version 5.14, such as
L<these|http://matrix.cpantesters.org/?dist=Unicode-Diacritic-Strip%200.08;os=linux;perl=5.14.2;reports=1>,
containing the error string

    perl: hv.c:2663: S_unshare_hek_or_pvn: Assertion `he->shared_he_he.hent_hek == hek' failed.

are due to a bug in that version of Perl, and are completely beyond my
control. [% info.colon %] is a pure Perl module with no XS components.

=back

[% INCLUDE "author" %]

